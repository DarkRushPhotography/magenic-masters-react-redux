name: Install Multicontainer Web App
on:
  workflow_dispatch:
    inputs:
      create:
        description: 'Create Multicontainer Web App'
        required: true
        default: false
    branches:
      - master
jobs:
  install:
    name: Install Multicontainer Web App
    runs-on: ubuntu-latest
    env:
      NX_BRANCH: ${{ github.event.number }}
      NX_RUN_GROUP: ${{ github.run_id }}
      AZ_RESOURCE_GROUP: DrpRg
      AZ_LOCATION: eastus
      AZ_APP_SERVICE_PLAN: DrpAppServicePlan
      AZ_APP_SERVICE_PLAN_SKU: S1
      AZ_WEB_APP_NAME: darkrushphoto
      AZ_KEY_VAULT: drpvault
      AZ_WEBSITES_ENABLE_APP_SERVICE_STORAGE: true
      AZ_DOCKER_REGISTRY_SERVER_URL: darkrushphotography.azurecr.io
      AZ_DOCKER_REGISTRY_SERVER_USERNAME: darkrushphotography
      AZ_APPSETTINGS_SET: az webapp config appsettings set
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup Node 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Azure Create Resource Group
        uses: azure/CLI@v1
        if: ${{ github.event.inputs.create }}"
        with:
          inlineScript: az group create --resource-group ${{ env.AZ_RESOURCE_GROUP }} --location ${{ env.AZ_LOCATION }}
      - name: Azure Create App Service Plan
        uses: azure/CLI@v1
        if: ${{ github.event.inputs.create }}"
        with:
          inlineScript: az appservice plan create --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_APP_SERVICE_PLAN }} --sku ${{ env.AZ_APP_SERVICE_PLAN_SKU }} --is-linux
      - name: Azure Create Multicontainer Web App
        uses: azure/CLI@v1
        if: ${{ github.event.inputs.create }}"
        with:
          inlineScript: az webapp create --resource-group ${{ env.AZ_RESOURCE_GROUP }} --plan ${{ env.AZ_APP_SERVICE_PLAN }} --name ${{ env.AZ_WEB_APP_NAME }} --multicontainer-config-type compose --multicontainer-config-file docker-compose.yml
      - name: Azure Assign Web App Identity
        uses: azure/CLI@v1
        if: ${{ github.event.inputs.create }}"
        with:
          inlineScript: az webapp identity assign --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }}
      - name: Azure set HTTPS_ONLY
        uses: azure/CLI@v1
        with:
          inlineScript: az webapp update --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --https-only true
      - name: Azure set WEBSITES_ENABLE_APP_SERVICE_STORAGE
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} WEBSITES_ENABLE_APP_SERVICE_STORAGE=${{ env.AZ_WEBSITES_ENABLE_APP_SERVICE_STORAGE }}
      - name: Azure set DOCKER_REGISTRY_SERVER_URL
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} DOCKER_REGISTRY_SERVER_URL=${{ env.AZ_DOCKER_REGISTRY_SERVER_URL }}
      - name: Azure set DOCKER_REGISTRY_SERVER_USERNAME
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} DOCKER_REGISTRY_SERVER_USERNAME=${{ env.AZ_DOCKER_REGISTRY_SERVER_USERNAME }}
      - name: Azure set DOCKER_REGISTRY_SERVER_PASSWORD
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} DOCKER_REGISTRY_SERVER_PASSWORD=@Microsoft.KeyVault(VaultName=${{ env.AZ_KEY_VAULT }};SecretName=DOCKER-REGISTRY-SERVER-PASSWORD)
      - name: Azure set NX_MONGO_DB_CONNECTION_STRING
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} NX_MONGO_DB_CONNECTION_STRING=@Microsoft.KeyVault(VaultName=${{ env.AZ_KEY_VAULT }};SecretName=NX-MONGO-DB-CONNECTION-STRING)
      - name: Azure set NX_PRIVATE_BLOB_CONNECTION_STRING
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} NX_PRIVATE_BLOB_CONNECTION_STRING=@Microsoft.KeyVault(VaultName=${{ env.AZ_KEY_VAULT }};SecretName=NX-PRIVATE-BLOB-CONNECTION-STRING)
      - name: Azure set NX_PRIVATE_TABLE_CONNECTION_STRING
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} NX_PRIVATE_TABLE_CONNECTION_STRING=@Microsoft.KeyVault(VaultName=${{ env.AZ_KEY_VAULT }};SecretName=NX-PRIVATE-TABLE-CONNECTION-STRING)
      - name: Azure set NX_PUBLIC_BLOB_CONNECTION_STRING
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} NX_PUBLIC_BLOB_CONNECTION_STRING=@Microsoft.KeyVault(VaultName==${{ env.AZ_KEY_VAULT }};SecretName=NX-PUBLIC-BLOB-CONNECTION-STRING)
      - name: Azure set NX_AUTH0_CLIENT_ID
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} NX_AUTH0_CLIENT_ID=@Microsoft.KeyVault(VaultName==${{ env.AZ_KEY_VAULT }};SecretName=NX-AUTH0-CLIENT-ID)
      - name: Azure set NX_AUTH0_CLIENT_SECRET
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} NX_AUTH0_CLIENT_SECRET=@Microsoft.KeyVault(VaultName=${{ env.AZ_KEY_VAULT }};SecretName=NX-AUTH0-CLIENT-SECRET)
      - name: Azure set NX_TINY_PNG_API_KEY
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} NX_TINY_PNG_API_KEY=@Microsoft.KeyVault(VaultName=${{ env.AZ_KEY_VAULT }};SecretName=NX-TINY-PNG-API-KEY)
      - name: Azure set NX_AYRSHARE_API_KEY
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} NX_AYRSHARE_API_KEY=@Microsoft.KeyVault(VaultName=${{ env.AZ_KEY_VAULT }};SecretName=NX-AYRSHARE-API-KEY)
      - name: Azure set NX_LOGZIO_TOKEN
        uses: azure/CLI@v1
        with:
          inlineScript: --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_WEB_APP_NAME }} --settings ${{ env.AZ_APPSETTINGS_SET }} NX_LOGZIO_TOKEN=@Microsoft.KeyVault(VaultName=${{ env.AZ_KEY_VAULT }};SecretName=NX-LOGZIO-TOKEN)
